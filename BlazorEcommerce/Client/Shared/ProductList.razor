@inject IProductService ProductService

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
	<span>Loading Products...</span>
}
else
{
	<div class="row pb-3">
		@foreach (var product in ProductService.Products)
		{
			<div class="col-lg-3 col-md-6">
				<div class="row p-2">
					<div class="col-12 p-1" style="border:1px solid #008cba; border-radius: 5px;">
						<div class="card">
							<img src="@product.ImageUrl" class="card-img-top rounded" />
							<div class="card-body">
								<div class="pl-1">
									<p class="card-title h5 text-primary">@product.Title</p>
									<p class="card-title text-info">by <b>@product.Description</b></p>
								</div>
								<div class="pl-1">
									<p> As Low as: ₦<b>@product.Price.ToString("0.00")</b> </p>
								</div>
							</div>
						</div>
						<div>
							<a href="/product/@product.Id" class="btn btn-primary form-control">
								Details
							</a>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
}

@code {
	protected override async Task OnInitializedAsync()
	{
		await ProductService.GetProducts();
	}
}